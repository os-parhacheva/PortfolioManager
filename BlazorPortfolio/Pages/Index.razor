@page "/"
@using System.Net.Http
@inject HttpClient Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using PortfolioManager.Domain
@using System.Collections.Generic


<PageTitle>Конкурсы</PageTitle>


<h3>Сервис предназначен для управления информацией о конкурсах</h3>
<br />
<button class="btn btn-primary" @onclick="() => OpenAddDialog()">Добавить конкурс</button>
<br />
@if (AddDialogOpen)
{
    <AddModal OnClose="@OnAddDialogClose"></AddModal>
}


@if (comps.Count == 0)
{
    <p>Конкурсы отсутствуют.</p>
}
else
{
    <table class="table table-hover">
      <thead>
        <tr>
          <th scope="col">Название</th>
          <th scope="col">Тип конкурса</th>
          <th scope="col">Результат</th>
          <th scope="col">&nbsp;</th>
        </tr>
      </thead>
      <tbody>
        @foreach (var comp in comps)
        {
            <tr>
              <td>@comp.Name</td>
              <td>@comp.Type</td>
              <td>@comp.Result</td>
              <td><a href="@($"edit/{comp.Id}")" style="text-decoration: none">Изменить</a> |
              <a href="@($"competition/{comp.Id}")" style="text-decoration: none">Обзор</a> |
              <a @onclick="@(() => Delete(comp.Id))" style="color: red">Удалить</a></td>
            </tr>   
        }
      </tbody>
    </table>  

}

@code {

    public List<Competition> comps = new List<Competition>();

    protected override async Task OnInitializedAsync()
    {
        comps = await Http.GetFromJsonAsync<List<Competition>>("https://localhost:5001/api/Com");
    }
    public async Task<List<Competition>> Delete(Guid id)
    {
        var result = await Http.DeleteAsync($"https://localhost:5001/api/Com/{id}");
        if (result.IsSuccessStatusCode)
        {
            comps = await Http.GetFromJsonAsync<List<Competition>>("https://localhost:5001/api/Com");
        }
        return comps;
    }
     public bool AddDialogOpen { get; set; }
     private void OnAddDialogClose(bool accepted)
     {
        AddDialogOpen = false;
        StateHasChanged();
     }
     private void OpenAddDialog()
     {
        AddDialogOpen = true;
        StateHasChanged();
     }

}
